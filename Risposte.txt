VERIFICA LUCA CARBONE 4E 22\11\2023


 1) Le commit create in una repository locale, vengono sincronizzate
automaticamente con la repository online collegata?
FALSO

2) Qual è il nuovo nome standard del branch principale utilizzato come
convenzione in GIT?
MAIN

3) Come descriveresti il workflow dei comandi di GIT?
git add -> git commit -> git push


4) Qual è il comando da utilizzare per vedere l’elenco di tutte le commit del
branch in cui ci si trova e i loro hashcode?

Il comando che viene utilizzato è git log.

5) Scrivi il comando per effettuare il rollback ad una commit precedente
Il comando che si utilizza per effettuare il rollback ad una commit precedente è 
git reset --hard "", dove ho messo gli apici va inserito il codice hash della commit a cui si vuole tornare.

6) Scrivi due motivazioni per giustificare l’utilizzo di GIT

La prima motivazione è il fatto che git è diventato uno standard nello sviluppo software di conseguenza
qualsiasi organizzazione o anche singolo utente che deve sviluppare un software lo utilizza.

La seconda motivazione riguarda i vantaggi che ti offre git, controllo delle versioni, commit, branching, reset..
è un software  che ti permette di avere un controllo totale e ben strutturato su quello su cui stai lavorando,
se non ci fosse git sarebbe un grandissimo problema gestire grandissimi progetti dove magari lavorano anche
migliaia di utenti diversi. E' talmente utile che quando qualsiasi utente che impara ad utilizzarlo non smetterà mai
perchè git da un aiuto significativo ed unico.

7) Spiega la differenza tra git clone e git pull.

Git clone e git pull vengono utilizzati in contesti differenti, git clone clona la repository online in quella
locale quindi è come se si creasse una copia identica della repository online in locale, questo tipo
di comando viene utilizzato quando su un computer non vi è alcuna repository riferita al progetto in 
cloud quindi si ha la necessita di metterlo sul proprio computer.

Git pull viene utilizzato quando si vuole sincronizzare la propria repository locale con quella online, git pull 
quando viene utilizzato aggiunge alla repository locale tutte le nuove commit presenti in quella online,
è una sorta di aggiornamento della repository locale, questo comando viene utilizzato quando per esempio su un computer c'è
già la repository con il progetto ma si ha una versione vecchia di esso e quindi si ha la necessità
di aggiornarla.

8) Descrivi cosa sono i rami di sviluppo in GIT (branches). Spiega inoltre come si
creano, come ci si sposta in un ramo esistente, come si uniscono le modifiche
di un ramo in un altro e come vedere il ramo corrente, attenendoti ai comandi
visti in classe.

I rami di sviluppo sono una caratteristica fondamentale di git, essi sono una sorta
di flussi di sviluppo paralleli al ramo principale (main) questi rami vengono creati per sviluppare 
delle nuove funzionalità o per corregere dei bug del software in modo da lasciare nel branch main
la versione del software funzionante  e "pulita", vengono nutilizzati anche come forma di sicurezza
perchè nel caso si incorra in un errore grave durante lo sviluppo del software si ha sempre nel 
ramo principale la versione del software completamente funzionante. Quando la correzione di un bug
o l'aggiunta di una nuova funzionalità va a buon fine le modifiche vengono aggiunte al main.

Per creare un nuovo ramo si usa il comando git checkout -b "" (dove ho messo gli apici va inserito il nome del branch).

Per spostarsi un ramo esistante si usa il comando git checkout "" (dove ho messo gli apici va inserito il nome del branch).

Per unire le modifiche di un ramo ad un'altro innanzittuto ci si sposta nel ramo che si vuole unire all'altro
e poi si utulizza il comando git merge "" (dove ho messo gli apici va inserito il nome del branch).

Per vedere il ramo corrente si utilizza git status.


9) Spiega di cosa si occupa l’ingegneria del software

L'ingegneria del software è quella professione che si occupa dell'ideazione, sviluppo e mantenimento
del software.

10) Spiega cosa è il ciclo di vita del software e le fasi in cui si suddivide

Il ciclo di vita di un software è composto da tutte le fasi di sviluppo di esso, che sono
analisi, progettazione, realizzazione, avvio in produzione e manutenzione.

Analisi, la fase di analisi è la fase preliminare del progetto qui è dove viene discussa la sua
effettiva fattibilità (sia economica che a livello di programma), le risorse che richiederebbe, 
l'interfaccia utente, l'architettura, i dati e i test da eseguire per verificare il funzionamento del software.

Progettazione, viene eseguita l'architettura di progetto e il disegno di dettaglio.

Realizzazione, viene realizzato il software.

Avvio in produzione, il software viene rilasciato ufficialmente al pubblico.

Manutenzione, ci sono 3 tipi:

Manutenzione correttiva, viene eseguita quando viene rilevato un problema nel software
e viene corretto.

Manutenzione adattiva, viene eseguita quando si devono fare delle modifiche a delle funzioni già presenti.

Manutenzione evolutiva, viene eseguita quando il software viene aggiornato, quindi vengono aggiunte
nuove funzionalità.